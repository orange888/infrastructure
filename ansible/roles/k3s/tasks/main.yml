---
- include_tasks:
    file: sysctl.yml
    apply:
      become: true

- name: Install pip
  become: true
  package:
    name: python3-pip
    state: present

- name: Install Python OpenShift package
  become: true
  pip:
    name: openshift
    state: present
  when: k3s_command == "server"

- name: Allow k3s server connections
  become: true
  ufw:
    rule: allow
    port: "6443"
    proto: tcp
  when: k3s_command == "server"

- name: Allow packet routing
  become: true
  ufw:
    default: allow
    direction: routed

- name: Set k3s base path
  set_fact:
    k3s_install_base: "{{ k3s_install_bin_dir }}/{{ k3s_install_name | default('k3s', true) }}"

- name: Get k3s installation script
  become: true
  get_url:
    url: https://get.k3s.io
    dest: "{{ k3s_install_base }}-install.sh"
    mode: 0755
    owner: root
    group: root
  register: k3s_install_script

- name: Check for current k3s installation
  stat:
    path: "{{ k3s_install_base }}"
  register: k3s_current_install

- name: Get current k3s version
  shell: "{{ k3s_install_base }} --version | awk -F' ' '{ print $3 }'"
  register: k3s_current_version
  when: k3s_current_install.stat.exists
  changed_when: k3s_current_version.stdout != k3s_version

- name: Run k3s installation script
  become: true
  command: k3s-install.sh
  environment:
    INSTALL_K3S_VERSION: "{{ k3s_version }}"
    INSTALL_K3S_BIN_DIR: "{{ k3s_install_bin_dir }}"
    INSTALL_K3S_SYSTEMD_DIR: "{{ k3s_install_systemd_dir }}"
    INSTALL_K3S_EXEC: |
      {{ k3s_command }} {{ k3s_command_args | join(" ") }}{{ " " }}
      {%- for key, value in k3s_node_labels.items() -%}
        --node-label {{ key }}={{ value }}{{ " " }}
      {%- endfor -%}
      {%- for key, value in k3s_node_taints.items() -%}
        --node-taint {{ key }}={{ value }}{{ " " }}
      {%- endfor -%}
    INSTALL_K3S_NAME: "{{ k3s_install_name | default('', true) }}"
    INSTALL_K3S_TYPE: "{{ k3s_install_type | default('', true) }}"
    K3S_CLUSTER_SECRET: "{{ k3s_cluster_secret | default('', true) }}"
    K3S_URL: "{{ k3s_url }}"
  when: k3s_install_script.changed or k3s_current_version.changed or not k3s_current_install.stat.exists

- name: Allow inbound CNI traffic
  become: true
  ufw:
    rule: allow
    direction: in
    interface: cni0
    src: 10.42.0.0/16

- name: Allow inbound traffic over kube-bridge
  become: true
  ufw:
    rule: allow
    direction: in
    interface: kube-bridge
    src: 10.42.0.0/16

- name: Allow metrics server connections
  become: true
  ufw:
    rule: allow
    port: "{{ item[1] }}"
    src: "{{ hostvars[item[0]].ansible_facts.default_ipv4.address }}"
    proto: tcp
  loop: |
    {{ groups[k3s_cluster_name] | product(["9100", "10249", "10250", "10251", "10252"]) | list }}

- name: Allow MetalLB speaker metrics scraping
  become: true
  ufw:
    rule: allow
    port: "7472"
    proto: tcp
    src: "{{ hostvars[item].ansible_facts.default_ipv4.address }}"
  loop: "{{ groups[k3s_cluster_name] }}"

- name: Allow Kilo traffic
  become: true
  ufw:
    rule: allow
    direction: in
    interface: kilo0
    src: "{{ item }}"
  loop:
    - 10.42.0.0/16
    - 10.4.0.0/24

- include_tasks:
    file: ./manifests.yml
    apply:
      become: true
      tags:
        - manifests
  when: k3s_command == "server"
  tags:
    - manifests
