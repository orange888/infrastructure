---
apiVersion: v1
kind: ConfigMap
metadata:
  name: influxdb-init
  namespace: monitoring
  labels:
    app.kubernetes.io/instance: influxdb
    app.kubernetes.io/name: influxdb
data:
  prometheus.iql: |+
    CREATE DATABASE "prometheus" WITH DURATION 30d REPLICATION 1 NAME "rp_30d"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: influxdb
  namespace: monitoring
  labels:
    app.kubernetes.io/instance: influxdb
    app.kubernetes.io/name: influxdb
data:
  influxdb.conf: |
    reporting-disabled = false
    bind-address = ":8088"

    [meta]
      dir = "/var/lib/influxdb/meta"
      retention-autocreate = true
      logging-enabled = true

    [data]
      dir = "/var/lib/influxdb/data"
      wal-dir = "/var/lib/influxdb/wal"
      query-log-enabled = true
      cache-max-memory-size = 1073741824
      cache-snapshot-memory-size = 26214400
      cache-snapshot-write-cold-duration = "10m0s"
      compact-full-write-cold-duration = "4h0m0s"
      max-series-per-database = 1000000
      max-values-per-tag = 100000
      trace-logging-enabled = false

    [coordinator]
      write-timeout = "10s"
      max-concurrent-queries = 0
      query-timeout = "0s"
      log-queries-after = "0s"
      max-select-point = 0
      max-select-series = 0
      max-select-buckets = 0

    [retention]
      enabled = true
      check-interval = "30m0s"

    [shard-precreation]
      enabled = true
      check-interval = "10m0s"
      advance-period = "30m0s"

    [monitor]
      store-enabled = true
      store-database = "_internal"
      store-interval = "10s"

    [subscriber]
      enabled = true
      http-timeout = "30s"
      insecure-skip-verify = false
      ca-certs = ""
      write-concurrency = 40
      write-buffer-size = 1000

    [http]
      enabled = true
      bind-address = ":8086"
      flux-enabled = true
      auth-enabled = false
      log-enabled = true
      write-tracing = false
      pprof-enabled = true
      https-enabled = false
      https-certificate = "/etc/ssl/influxdb.pem"
      https-private-key = ""
      max-row-limit = 10000
      max-connection-limit = 0
      shared-secret = "beetlejuicebeetlejuicebeetlejuice"
      realm = "InfluxDB"
      unix-socket-enabled = false
      bind-socket = "/var/run/influxdb.sock"

    [continuous_queries]
      log-enabled = true
      enabled = true
      run-interval = "1s"

    [logging]
      format =  "auto"
      level =  "info"
      supress-logo = false

---
apiVersion: v1
kind: Service
metadata:
  labels: &labels
    app.kubernetes.io/instance: influxdb
    app.kubernetes.io/name: influxdb
  name: influxdb
  namespace: monitoring
spec:
  clusterIP: None
  ports:
    - name: api
      port: 8086
      targetPort: 8086
    - name: rpc
      port: 8088
      targetPort: 8088
  selector:
    <<: *labels

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: influxdb
  namespace: monitoring
  labels: &labels
    app.kubernetes.io/instance: influxdb
    app.kubernetes.io/name: influxdb
  annotations:
    fluxcd.io/tag.influxdb: regexp:^1\.\d+\.\d+-alpine$
    fluxcd.io/automated: "true"
spec:
  replicas: 1
  serviceName: influxdb
  selector:
    matchLabels:
      <<: *labels
  template:
    metadata:
      labels:
        <<: *labels
    spec:
      containers:
        - image: influxdb:1.7.8-alpine
          livenessProbe:
            httpGet:
              path: /ping
              port: api
            initialDelaySeconds: 30
            timeoutSeconds: 5
          name: influxdb
          ports:
            - containerPort: 8086
              name: api
          readinessProbe:
            httpGet:
              path: /ping
              port: api
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits: &resources
              cpu: 1
              memory: 2Gi
            requests:
              <<: *resources
          volumeMounts:
            - name: config
              mountPath: /etc/influxdb
            - name: data
              mountPath: /var/lib/influxdb
            - name: init
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: config
          configMap:
            name: influxdb
        - name: init
          configMap:
            name: influxdb-init
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          <<: *labels
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasource-influxdb
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    grafana.com/datasource: influxdb
data:
  influxdb.yml: |
    apiVersion: 1
    datasources:
      - name: InfluxDB
        type: influxdb
        url: http://influxdb:8086
        access: proxy
        database: prometheus
        isDefault: true
