---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/name: grafana
data:
  config.hcl: |
    vault {
      vault_agent_token_file = "/vault/.vault-token"
      renew_token = true

      retry {
        backoff = "1s"
      }
    }
    template {
      source = "/vault/ct-config/grafana.ini.tpl"
      destination = "/consul-template/data/grafana.ini"
      error_on_missing_key = true
    }
  grafana.ini.tpl: |
    [security]
    {{- with secret "secrets/grafana/admin" }}
    admin_password = {{ .Data.data.admin_password }}
    {{ end  }}

    [analytics]
    check_for_updates = true

    [database]
    type = postgres
    host = postgres.default.svc:5432
    {{- with secret "database/creds/grafana" }}
    user = {{ .Data.username }}
    password = {{ .Data.password }}
    {{ end }}

    [grafana_net]
    url = https://grafana.net

    [server]
    root_url = https://metrics.hannahs.family

    [log]
    mode = console

    [auth.github]
    enabled = true
    allow_sign_up = true
    {{- with secret "secrets/grafana/auth/github" }}
    client_id = {{ .Data.data.client_id }}
    client_secret = {{ .Data.data.client_secret }}
    {{ end }}
    scopes = user:email,read:org
    auth_url = https://github.com/login/oauth/authorize
    token_url = https://github.com/login/oauth/access_token
    api_url = https://api.github.com/user
    team_ids =
    allowed_organizations = hannahs-family

    [paths]
    data = /var/lib/grafana/data
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
  plugins: |
    grafana-clock-panel
  vault-agent-config.hcl: |
    pid_file = "/tmp/pidfile"
    exit_after_auth = true

    auto_auth {
      method "kubernetes" {
        mount_path = "auth/kubernetes"
        config = {
          role = "grafana"
        }
      }

      sink "file" {
        config = {
          path = "/vault/.vault-token"
        }
      }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/name: grafana
  name: grafana-config-dashboards
  namespace: monitoring
data:
  provider.yaml: |
    apiVersion: 1
    providers:
      - name: sidecarProvider
        orgId: 1
        folder: ""
        type: file
        disableDeletion: false
        options:
          path: /tmp/dashboards

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/name: grafana
  name: grafana
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/name: grafana
  name: grafana-clusterrole
  namespace: monitoring
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/name: grafana
  name: grafana-clusterrolebinding
  namespace: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: grafana-clusterrole
subjects:
  - kind: ServiceAccount
    name: grafana
    namespace: monitoring
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
  labels: &labels
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/name: grafana
spec:
  ports:
    - name: service
      port: 3000
  selector:
    <<: *labels

---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels: &labels
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/name: grafana
  annotations:
    fluxcd.io/tag.consul-template: regexp:^0\.\d+\.\d+-alpine$
    fluxcd.io/tag.grafana-sc-dashboard: semver:~0
    fluxcd.io/tag.grafana-sc-datasources: semver:~0
    fluxcd.io/tag.grafana: semver:~6
    fluxcd.io/tag.vault-agent: semver:~1
    fluxcd.io/automated: "true"
spec:
  replicas: 2
  selector:
    matchLabels:
      <<: *labels
  template:
    metadata:
      labels:
        <<: *labels
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  <<: *labels
              topologyKey: kubernetes.io/hostname
      initContainers:
        - name: vault-agent
          image: vault:1.2.3
          command:
            - vault
          args:
            - agent
            - -config=/vault/agent/config.hcl
          env:
            - name: VAULT_ADDR
              value: https://vault.kube-system.svc:8200
            - name: VAULT_CACERT
              value: /vault/tls/ca.crt
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
          securityContext:
            runAsUser: 100
            runAsGroup: 1000
          volumeMounts:
            - name: ca
              mountPath: /vault/tls/ca.crt
            - name: config
              mountPath: /vault/agent/config.hcl
              subPath: vault-agent-config.hcl
            - name: vault-env
              mountPath: /vault
        - name: grafana-sc-datasources
          image: kiwigrid/k8s-sidecar:0.1.20
          env:
            - name: METHOD
              value: LIST
            - name: LABEL
              value: grafana.com/datasource
            - name: FOLDER
              value: /etc/grafana/provisioning/datasources
            - name: RESOURCE
              value: both
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - mountPath: /etc/grafana/provisioning/datasources
              name: sc-datasources-volume
      containers:
        - name: consul-template
          image: hashicorp/consul-template:0.22.0-alpine
          args:
            - -config=/vault/ct-config/config.hcl
          env:
            - name: VAULT_ADDR
              value: https://vault.kube-system.svc:8200
            - name: VAULT_CACERT
              value: /vault/tls/ca.crt
          volumeMounts:
            - name: ca
              mountPath: /vault/tls/ca.crt
            - name: config
              mountPath: /vault/ct-config
              readOnly: true
            - name: ct-secrets
              mountPath: /consul-template/data
            - name: vault-env
              mountPath: /vault
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - SYS_PTRACE
        - name: grafana-sc-dashboard
          image: kiwigrid/k8s-sidecar:0.1.20
          env:
            - name: LABEL
              value: grafana.com/dashboard
            - name: FOLDER
              value: /tmp/dashboards
            - name: RESOURCE
              value: both
            - name: NAMESPACE
              value: ALL
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - mountPath: /tmp/dashboards
              name: sc-dashboard-volume
        - name: grafana
          image: grafana/grafana:6.4.2
          env:
            - name: GF_PATHS_CONFIG
              value: /etc/grafana/config/grafana.ini
            - name: GF_INSTALL_PLUGINS
              valueFrom:
                configMapKeyRef:
                  key: plugins
                  name: grafana
          ports:
            - containerPort: 80
              name: service
              protocol: TCP
            - containerPort: 3000
              name: grafana
              protocol: TCP
          readinessProbe: &probe
            httpGet:
              path: /api/health
              port: 3000
          livenessProbe:
            <<: *probe
            failureThreshold: 10
            initialDelaySeconds: 60
            timeoutSeconds: 30
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: ca
              mountPath: /etc/ssl/certs/hannahs.family.ca.cert.pem
            - name: ct-secrets
              mountPath: /etc/grafana/config
              readOnly: true
            - name: storage
              mountPath: /var/lib/grafana
            - name: sc-dashboard-provider
              mountPath: /etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml
              subPath: provider.yaml
            - name: sc-dashboard-volume
              mountPath: /tmp/dashboards
            - name: sc-datasources-volume
              mountPath: /etc/grafana/provisioning/datasources
      serviceAccountName: grafana
      volumes:
        - name: ca
          hostPath:
            path: /etc/ssl/certs/hannahs.family.ca.cert.pem
            type: File
        - name: config
          configMap:
            name: grafana
        - name: ct-secrets
          emptyDir: {}
        - name: sc-dashboard-provider
          configMap:
            name: grafana-config-dashboards
        - name: sc-dashboard-volume
          emptyDir: {}
        - name: sc-datasources-volume
          emptyDir: {}
        - name: storage
          emptyDir: {}
        - name: vault-env
          emptyDir: {}

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: grafana-http
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
spec:
  entryPoints:
    - http
  routes:
    - match: Host(`metrics.hannahs.family`)
      kind: Rule
      middlewares:
        - name: https-redirect
          namespace: default
      services:
        - name: grafana
          port: 3000
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: grafana-https
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
spec:
  entryPoints:
    - https
  routes:
    - match: Host(`metrics.hannahs.family`)
      kind: Rule
      services:
        - name: grafana
          port: 3000
  tls:
    certResolver: default
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
spec:
  endpoints:
    - dnsName: metrics.hannahs.family
      recordType: CNAME
      targets:
        - traefik.hannahs.family
