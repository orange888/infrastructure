---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-k8s
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes/metrics
    verbs:
      - get
  - nonResourceURLs:
      - /metrics
    verbs:
      - get

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-k8s
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-k8s
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: monitoring

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-k8s-vault-agent
  namespace: monitoring
  labels:
    prometheus: k8s
data:
  config.hcl: |
    auto_auth {
      method "kubernetes" {
        mount_path = "auth/kubernetes"
        config = {
          role = "monitoring__prometheus"
        }
      }

      sink "file" {
        config = {
          path = "/var/run/secrets/vaultproject.io/vault/token"
        }
      }
    }

---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels: &labels
    app: prometheus
    prometheus: k8s
  name: k8s
  namespace: monitoring
spec:
  alerting:
    alertmanagers:
      - name: alertmanager-main
        namespace: monitoring
        port: web
  baseImage: quay.io/prometheus/prometheus
  containers:
    - name: vault-agent
      image: vault:1.2.3
      command:
        - vault
      args:
        - agent
        - -config=/vault/agent/config.hcl
      env:
        - name: VAULT_ADDR
          value: https://vault.kube-system.svc:8200
        - name: VAULT_CACERT
          value: /vault/tls/ca.crt
      resources:
        limits:
          cpu: 10m
          memory: 64Mi
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      volumeMounts:
        - name: ca
          mountPath: /vault/tls/ca.crt
        - name: vault-agent-config
          mountPath: /vault/agent/config.hcl
          subPath: config.hcl
        - name: vault-secrets
          mountPath: /var/run/secrets/vaultproject.io/vault
    - name: prometheus
      volumeMounts:
        - name: vault-secrets
          mountPath: /var/run/secrets/vaultproject.io/vault
  podMonitorNamespaceSelector: {}
  podMonitorSelector: {}
  replicas: 1
  nodeSelctor:
    kubernetes.io/hostname: tapu-fini.hannahs.family
  resources:
    limits: &resources
      cpu: 500m
      memory: 2Gi
    requests:
      <<: *resources
  retention: 2w
  retentionSize: 20GB
  ruleNamespaceSelector: {}
  ruleSelector:
    matchLabels:
      prometheus: k8s
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: prometheus
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector: {}
  storage:
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 21Gi
  version: v2.13.0
  volumes:
    - name: ca
      hostPath:
        path: /etc/ssl/certs/hannahs.family.ca.cert.pem
        type: File
    - name: vault-agent-config
      configMap:
        name: prometheus-k8s-vault-agent
    - name: vault-secrets
      emptyDir: {}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prometheus-k8s-config
  namespace: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prometheus-k8s-config
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: monitoring

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prometheus-k8s-config
  namespace: monitoring
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get

---
apiVersion: v1
kind: Service
metadata:
  labels:
    prometheus: k8s
  name: prometheus-k8s
  namespace: monitoring
spec:
  ports:
    - name: web
      port: 9090
      targetPort: web
  selector:
    app: prometheus
    prometheus: k8s

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    k8s-app: prometheus
  name: prometheus
  namespace: monitoring
spec:
  endpoints:
    - interval: 30s
      port: web
  selector:
    matchLabels:
      prometheus: k8s

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    k8s-app: apiserver
  name: kube-apiserver
  namespace: monitoring
spec:
  endpoints:
    - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      interval: 30s
      metricRelabelings:
        - action: drop
          regex: etcd_(debugging|disk|request|server).*
          sourceLabels:
            - __name__
        - action: drop
          regex: apiserver_admission_controller_admission_latencies_seconds_.*
          sourceLabels:
            - __name__
        - action: drop
          regex: apiserver_admission_step_admission_latencies_seconds_.*
          sourceLabels:
            - __name__
      port: https
      scheme: https
      tlsConfig:
        caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  jobLabel: component
  namespaceSelector:
    matchNames:
      - default
  selector:
    matchLabels:
      component: apiserver
      provider: kubernetes

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    k8s-app: kubelet
  name: kubelet
  namespace: monitoring
spec:
  endpoints:
    - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      honorLabels: true
      interval: 30s
      port: https-metrics
      scheme: https
      tlsConfig:
        insecureSkipVerify: true
    - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      honorLabels: true
      interval: 30s
      metricRelabelings:
        - action: drop
          regex: container_(network_tcp_usage_total|network_udp_usage_total|tasks_state|cpu_load_average_10s)
          sourceLabels:
            - __name__
      path: /metrics/cadvisor
      port: https-metrics
      scheme: https
      tlsConfig:
        insecureSkipVerify: true
  jobLabel: k8s-app
  namespaceSelector:
    matchNames:
      - kube-system
  selector:
    matchLabels:
      k8s-app: kubelet

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: prometheus-http
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/instance: prometheus
    app.kubernetes.io/component: server
spec:
  entryPoints:
    - http
  routes:
    - match: Host(`prometheus.metrics.hannahs.family`)
      kind: Rule
      middlewares:
        - name: https-redirect
          namespace: default
      services:
        - name: prometheus-k8s
          port: 9090

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: prometheus-https
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/instance: prometheus
    app.kubernetes.io/component: server
spec:
  entryPoints:
    - https
  routes:
    - match: Host(`prometheus.metrics.hannahs.family`)
      kind: Rule
      middlewares:
        - name: oauth2-proxy
          namespace: default
      services:
        - name: prometheus-k8s
          port: 9090
  tls:
    certResolver: default
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/instance: prometheus
    app.kubernetes.io/component: server
spec:
  endpoints:
    - dnsName: prometheus.metrics.hannahs.family
      recordType: CNAME
      targets:
        - traefik.hannahs.family

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasource-prometheus
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    grafana.com/datasource: prometheus
data:
  prometheus.yml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus-k8s:9090
        access: proxy
        isDefault: true
