---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vanilla-creative
  namespace: minecraft
  labels:
    app.kubernetes.io/instance: vanilla-creative
    app.kubernetes.io/name: minecraft
spec:
  storageClassName: rook-ceph-fs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vanilla-creative-init
  namespace: minecraft
  labels:
    app.kubernetes.io/instance: vanilla-creative
    app.kubernetes.io/name: minecraft
data:
  init.sh: |
    #!/bin/sh

    apk add xz
    tar xJvf /minecraft-vanilla-creative.tar.xz -C /pvc
    chown -R 1000:1000 /pvc/*

---
apiVersion: batch/v1
kind: Job
metadata:
  name: vanilla-creative-init
  namespace: minecraft
  labels:
    app.kubernetes.io/instance: vanilla-creative
    app.kubernetes.io/name: minecraft
spec:
  backoffLimit: 3
  template:
    spec:
      nodeSelector:
        kubernetes.io/hostname: tapu-koko
      restartPolicy: Never
      containers:
        - name: init
          image: alpine
          command:
            - sh
            - /init.sh
          volumeMounts:
            - name: init
              mountPath: /init.sh
              subPath: init.sh
            - name: pvc
              mountPath: /pvc
            - name: xz
              mountPath: /minecraft-vanilla-creative.tar.xz
      volumes:
        - name: init
          configMap:
            name: vanilla-creative-init
        - name: pvc
          persistentVolumeClaim:
            claimName: vanilla-creative
        - name: xz
          hostPath:
            path: /home/ansible/minecraft-vanilla-creative-1570135874.tar.xz
            type: File

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vanilla-creative
  namespace: minecraft
  labels:
    app.kubernetes.io/instance: vanilla-creative
    app.kubernetes.io/name: minecraft

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vanilla-creative
  namespace: minecraft
  labels:
    app.kubernetes.io/instance: vanilla-creative
    app.kubernetes.io/name: minecraft
data:
  eula.txt: |
    eula=true
  server.properties: |
    difficulty=normal
    enforce-whitelist=true
    gamemode=creative
    motd=Hannah Family Minecraft - Vanilla (Creative)
    enable-rcon=true
  whitelist.json: |
    [
      {
        "uuid": "aedf3044-aaed-40cf-8ac3-2eb19ea89e59",
        "name": "FragPenguin"
      },
      {
        "uuid": "11d158b7-df6d-409c-a6a4-39afc5ec3985",
        "name": "Jay51617"
      },
      {
        "uuid": "f63dcac9-344f-4dcf-a7e9-68005d6ac204",
        "name": "Koji31"
      }
    ]

---
apiVersion: v1
kind: Service
metadata:
  name: vanilla-creative
  namespace: minecraft
  labels: &labels
    app.kubernetes.io/instance: vanilla-creative
    app.kubernetes.io/name: minecraft
    app.kubernetes.io/component: server
  annotations:
    external-dns.alpha.kubernetes.io/hostname: creative.mc.hannahs.family
spec:
  type: NodePort
  ports:
    - name: minecraft
      port: 25565
      nodePort: 30110
      targetPort: minecraft
    - name: rcon
      port: 25575
      nodePort: 30111
      targetPort: rcon
  selector:
    <<: *labels

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vanilla-creative
  namespace: minecraft
  labels: &labels
    app.kubernetes.io/instance: vanilla-creative
    app.kubernetes.io/name: minecraft
    app.kubernetes.io/component: server
spec:
  serviceName: vanilla-creative
  replicas: 1
  selector:
    matchLabels:
      <<: *labels
  template:
    metadata:
      labels:
        <<: *labels
      annotations:
        vault.security.banzaicloud.io/vault-role: minecraft__vanilla-creative
        vault.security.banzaicloud.io/vault-skip-verify: "true"
    spec:
      serviceAccountName: vanilla-creative
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: minecraft
                topologyKey: kubernetes.io/hostname
              weight: 1
      securityContext:
        fsGroup: 1000
      containers:
        - name: minecraft
          image: hannahsfamily/mc-server-vanilla:1.14.4-4
          ports:
            - name: minecraft
              containerPort: 25565
            - name: rcon
              containerPort: 25575
          env:
            - name: HEAP_SIZE
              value: "2048"
            - name: RCON_PASSWORD
              value: vault:secrets/data/minecraft/vanilla-creative#rcon_password
          livenessProbe: &probe
            tcpSocket:
              port: 25565
          readinessProbe:
            <<: *probe
          resources:
            requests:
              cpu: 1
              memory: 2304Mi # 2Gi heap + 256Mi overhead
            limits:
              cpu: 2
              memory: 2304Mi
          volumeMounts:
            - name: storage
              mountPath: /opt/minecraft/config
              subPath: config
            - name: overrides
              mountPath: /opt/minecraft/overrides
            - name: storage
              mountPath: /opt/minecraft/server
              subPath: server
      volumes:
        - name: overrides
          configMap:
            name: vanilla-creative
        - name: storage
          persistentVolumeClaim:
            claimName: vanilla-creative

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vanilla-creative-backup
  namespace: minecraft
  labels:
    app.kubernetes.io/instance: vanilla-creative
    app.kubernetes.io/name: minecraft
    app.kubernetes.io/component: backup
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: batch/v1beta1
kind: CronJobList
items:
  - apiVersion: batch/v1beta1
    kind: CronJob
    metadata: &metadata
      name: vanilla-creative-backup-daily
      namespace: minecraft
      labels: &labels
        app.kubernetes.io/instance: vanilla-creative
        app.kubernetes.io/name: minecraft
        app.kubernetes.io/component: backup
    spec:
      schedule: "0 9 * * *"
      concurrencyPolicy: &policy Forbid
      jobTemplate:
        metadata:
          labels:
            <<: *labels
        spec:
          template:
            metadata:
              labels:
                <<: *labels
            spec:
              restartPolicy: Never
              containers:
                - name: backup
                  image: alpine
                  command:
                    - sh
                    - /daily.sh
                  volumeMounts:
                    - name: scripts
                      mountPath: /daily.sh
                      subPath: daily.sh
                      readOnly: true
                    - name: vanilla-creative
                      mountPath: /pvc
                      readOnly: true
                    - name: vanilla-creative-backup
                      mountPath: /backup/daily
                      subPath: daily
              volumes: &volumes
                - name: scripts
                  configMap:
                    name: backup-scripts
                - name: vanilla-creative
                  persistentVolumeClaim:
                    claimName: vanilla-creative
                - name: vanilla-creative-backup
                  persistentVolumeClaim:
                    claimName: vanilla-creative-backup
  - apiVersion: batch/v1beta1
    kind: CronJob
    metadata:
      <<: *metadata
      name: vanilla-creative-backup-weekly
    spec:
      schedule: "0 9 * * 0"
      concurrencyPolicy: *policy
      jobTemplate:
        metadata:
          labels:
            <<: *labels
        spec:
          template:
            metadata:
              labels:
                <<: *labels
            spec:
              restartPolicy: Never
              containers:
                - name: backup
                  image: alpine
                  command:
                    - sh
                    - /weekly.sh
                  volumeMounts:
                    - name: scripts
                      mountPath: /weekly.sh
                      subPath: weekly.sh
                      readOnly: true
                    - name: vanilla-creative-backup
                      mountPath: /backup/weekly
                      subPath: weekly
                    - name: vanilla-creative-backup
                      mountPath: /backup/daily
                      subPath: daily
                      readOnly: true
              volumes: *volumes
  - apiVersion: batch/v1beta1
    kind: CronJob
    metadata:
      <<: *metadata
      name: vanilla-creative-backup-monthly
    spec:
      schedule: "0 9 1 * *"
      concurrencyPolicy: *policy
      jobTemplate:
        metadata:
          labels:
            <<: *labels
        spec:
          template:
            metadata:
              labels:
                <<: *labels
            spec:
              restartPolicy: Never
              containers:
                - name: backup
                  image: alpine
                  command:
                    - sh
                    - /monthly.sh
                  volumeMounts:
                    - name: scripts
                      mountPath: /monthly.sh
                      subPath: monthly.sh
                      readOnly: true
                    - name: vanilla-creative-backup
                      mountPath: /backup/monthly
                      subPath: monthly
                    - name: vanilla-creative-backup
                      mountPath: /backup/weekly
                      subPath: weekly
                      readOnly: true
              volumes: *volumes
