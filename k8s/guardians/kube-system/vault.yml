---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: vault
  labels: &labels
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
  namespace: kube-system
spec:
  maxUnavailable: 0
  selector:
    matchLabels:
      <<: *labels

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
  namespace: kube-system
data:
  extraconfig-from-values.hcl: |-
    ui = true
    listener "tcp" {
      address = "[::]:8200"
      cluster_address = "[::]:8201"
      tls_cert_file = "/vault/tls/cert.pem"
      tls_key_file = "/vault/tls/key.pem"
    }
    storage "consul" {
      path = "vault"
      address = "consul.kube-system.svc:8500"
      token = "CONSUL_TOKEN"
    }

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault
  namespace: kube-system
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: vault-server-binding
  namespace: kube-system
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: vault
    namespace: kube-system

---
apiVersion: v1
kind: Service
metadata:
  name: vault
  labels: &labels
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  namespace: kube-system
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: https
      port: 8200
      targetPort: 8200
    - name: internal
      port: 8201
      targetPort: 8201
  selector:
    <<: *labels

---
apiVersion: v1
kind: Service
metadata:
  name: vault-ui
  labels: &labels
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
  namespace: kube-system
spec:
  selector:
    <<: *labels
  ports:
    - name: https
      port: 8200
  type: ClusterIP

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: vault-ui-http
  namespace: kube-system
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
spec:
  entrypoints:
    - http
  routes:
    - match: Host(`vault.hannahs.family`)
      kind: Rule
      middlewares:
        - name: https-redirect
          namespace: default
      services:
        - name: vault-ui
          port: 8200

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: vault-ui-https
  namespace: kube-system
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
spec:
  entrypoints:
    - https
  routes:
    - match: Host(`vault.hannahs.family`)
      kind: Rule
      services:
        - name: vault-ui
          port: 8200
  tls:
    certResolver: default

---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: vault-ui
  namespace: kube-system
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
spec:
  endpoints:
    - dnsName: vault.hannahs.family
      recordType: CNAME
      targets:
        - traefik.hannahs.family

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
  labels: &labels
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
  annotations:
    fluxcd.io/tag.vault: semver:~1
    fluxcd.io/automated: "true"
  namespace: kube-system
spec:
  serviceName: vault
  podManagementPolicy: Parallel
  replicas: 2
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      <<: *labels
  template:
    metadata:
      labels:
        <<: *labels
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  <<: *labels
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 10
      serviceAccountName: vault
      volumes:
        - name: ca
          hostPath:
            path: /etc/ssl/certs/hannahs.family.ca.cert.pem
            type: File
        - name: config
          configMap:
            name: vault
        - name: secret
          secret:
            secretName: vault
      containers:
        - name: vault
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            privileged: true
          image: vault:1.2.2
          command:
            - /bin/sh
            - -ec
          args:
            - |
              sed -E "s/HOST_IP/${HOST_IP?}/g" /vault/config/extraconfig-from-values.hcl > /tmp/storageconfig.hcl;
              sed -Ei "s/POD_IP/${POD_IP?}/g" /tmp/storageconfig.hcl;
              sed -Ei "s/CONSUL_TOKEN/${CONSUL_TOKEN?}/g" /tmp/storageconfig.hcl;
              chown vault:vault /tmp/storageconfig.hcl;
              /usr/local/bin/docker-entrypoint.sh vault server -config=/tmp/storageconfig.hcl
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CONSUL_TOKEN
              valueFrom:
                secretKeyRef:
                  name: vault
                  key: CONSUL_TOKEN
            - name: VAULT_ADDR
              value: https://127.0.0.1:8200
            - name: VAULT_API_ADDR
              value: https://$(POD_NAME).vault:8200
            - name: SKIP_CHOWN
              value: "true"
            - name: VAULT_CAPATH
              value: /etc/ssl/certs/hannahs.family.ca.cert.pem
          volumeMounts:
            - name: config
              mountPath: /vault/config
            - name: secret
              mountPath: /vault/tls/cert.pem
              subPath: cert.pem
            - name: secret
              mountPath: /vault/tls/key.pem
              subPath: key.pem
            - name: ca
              mountPath: /etc/ssl/certs/hannahs.family.ca.cert.pem
          ports:
            - containerPort: 8200
              name: https
            - containerPort: 8201
              name: internal
            - containerPort: 8202
              name: replication
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -ec
                - vault status -tls-skip-verify
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 5
