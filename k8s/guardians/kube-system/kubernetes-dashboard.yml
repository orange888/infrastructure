---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/name: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kube-system
type: Opaque

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/name: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/name: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resourceNames:
      - kubernetes-dashboard-key-holder
      - kubernetes-dashboard
    resources:
      - secrets
    verbs:
      - get
      - update
      - delete
  - apiGroups:
      - ""
    resourceNames:
      - kubernetes-dashboard-settings
    resources:
      - configmaps
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resourceNames:
      - heapster
    resources:
      - services
    verbs:
      - proxy
  - apiGroups:
      - ""
    resourceNames:
      - heapster
      - "http:heapster:"
      - "https:heapster:"
    resources:
      - services/proxy
    verbs:
      - get

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/name: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubernetes-dashboard
subjects:
  - kind: ServiceAccount
    name: kubernetes-dashboard
    namespace: kube-system

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/name: kubernetes-dashboard
    kubernetes.io/cluster-service: "true"
  name: kubernetes-dashboard
  namespace: kube-system
spec:
  ports:
    - name: https
      port: 443
      targetPort: 8443
  selector:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/name: kubernetes-dashboard

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels: &labels
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/name: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      <<: *labels
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
      labels:
        <<: *labels
    spec:
      containers:
        - args:
            - --auto-generate-certificates
          image: k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources:
            limits: &resources
              cpu: 10m
              memory: 64Mi
            requests:
              <<: *resources
          volumeMounts:
            - mountPath: /certs
              name: kubernetes-dashboard-certs
            - mountPath: /tmp
              name: tmp-volume
      serviceAccountName: kubernetes-dashboard
      volumes:
        - name: kubernetes-dashboard-certs
          secret:
            secretName: kubernetes-dashboard
        - emptyDir: {}
          name: tmp-volume

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: kubernetes-dashboard-http
  namespace: kube-system
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/instance: kubernetes-dashboard
spec:
  entryPoints:
    - http
  routes:
    - match: Host(`k8s.hannahs.family`)
      kind: Rule
      middlewares:
        - name: https-redirect
          namespace: default
      services:
        - name: kubernetes-dashboard
          port: 443

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: kubernetes-dashboard-https
  namespace: kube-system
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/instance: kubernetes-dashboard
spec:
  entryPoints:
    - https
  routes:
    - match: Host(`k8s.hannahs.family`)
      kind: Rule
      services:
        - name: kubernetes-dashboard
          port: 443
  tls:
    certResolver: default

---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: kubernetes-dashboard
  namespace: kube-system
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/instance: kubernetes-dashboard
spec:
  endpoints:
    - dnsName: k8s.hannahs.family
      recordType: CNAME
      targets:
        - traefik.hannahs.family
