---
apiVersion: extensions/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: docker/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: docker/default
  labels:
    app.kubernetes.io/instance: vault-secrets-webhook
    app.kubernetes.io/name: vault-secrets-webhook
  name: vault-secrets-webhook
  namespace: kube-system
spec:
  allowPrivilegeEscalation: false
  allowedCapabilities:
    - IPC_LOCK
  fsGroup:
    ranges:
      - max: 65535
        min: 1
    rule: MustRunAs
  readOnlyRootFilesystem: true
  runAsUser:
    rule: MustRunAsNonRoot
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
      - max: 65535
        min: 1
    rule: MustRunAs
  volumes:
    - secret
    - emptyDir
    - configMap

---
apiVersion: extensions/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: docker/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: docker/default
  labels:
    app.kubernetes.io/instance: vault-secrets-webhook
    app.kubernetes.io/name: vault-secrets-webhook
  name: vault-secrets-webhook.mutate
  namespace: kube-system
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
    - secret
    - downwardAPI
    - emptyDir
    - configMap

---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels: &labels
    app.kubernetes.io/component: mutating-webhook
    app.kubernetes.io/instance: vault-secrets-webhook
    app.kubernetes.io/name: vault-secrets-webhook
  name: vault-secrets-webhook
  namespace: kube-system
spec:
  minAvailable: 1
  selector:
    matchLabels:
      <<: *labels

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: vault-secrets-webhook
    app.kubernetes.io/name: vault-secrets-webhook
  name: vault-secrets-webhook
  namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: vault-secrets-webhook
    app.kubernetes.io/name: vault-secrets-webhook
  name: vault-secrets-webhook
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
      - configmaps
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - update
  - apiGroups:
      - extensions
    resourceNames:
      - vault-secrets-webhook
    resources:
      - podsecuritypolicies
    verbs:
      - use

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: vault-secrets-webhook
    app.kubernetes.io/name: vault-secrets-webhook
  name: vault-secrets-webhook-limited
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vault-secrets-webhook
subjects:
  - kind: ServiceAccount
    name: vault-secrets-webhook
    namespace: kube-system

---
apiVersion: v1
kind: Service
metadata:
  labels: &labels
    app.kubernetes.io/component: mutating-webhook
    app.kubernetes.io/instance: vault-secrets-webhook
    app.kubernetes.io/name: vault-secrets-webhook
  annotations:
    prometheus.io/scrape: "true"
  name: vault-secrets-webhook
  namespace: kube-system
spec:
  ports:
    - name: vault-secrets-webhook
      port: 443
      targetPort: 8443
  selector:
    <<: *labels

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault-secrets-webhook
  namespace: kube-system
  labels: &labels
    app.kubernetes.io/component: mutating-webhook
    app.kubernetes.io/instance: vault-secrets-webhook
    app.kubernetes.io/name: vault-secrets-webhook
  annotations:
    fluxcd.io/tag.vault-secrets-webhook: semver:~0
spec:
  replicas: 2
  selector:
    matchLabels:
      <<: *labels
  template:
    metadata:
      labels:
        <<: *labels
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  <<: *labels
              topologyKey: kubernetes.io/hostname
      containers:
        - env:
            - name: TLS_CERT_FILE
              value: /var/serving-cert/tls.crt
            - name: TLS_PRIVATE_KEY_FILE
              value: /var/serving-cert/tls.key
            - name: LISTEN_ADDRESS
              value: :8443
            - name: DEBUG
              value: "false"
            - name: VAULT_ADDR
              value: https://vault.kube-system.svc:8200
            - name: VAULT_CACERT
              value: /etc/ssl/certs/hannahs.family.ca.cert.pem
          image: banzaicloud/vault-secrets-webhook:0.5.3
          name: vault-secrets-webhook
          ports:
            - containerPort: 8443
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8443
              scheme: HTTPS
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 65534
          volumeMounts:
            - mountPath: /var/serving-cert
              name: serving-cert
            - mountPath: /etc/ssl/certs/hannahs.family.ca.cert.pem
              name: ca
      serviceAccountName: vault-secrets-webhook
      volumes:
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: vault-secrets-webhook
        - hostPath:
            path: /etc/ssl/certs/hannahs.family.ca.cert.pem
            type: File
          name: ca
