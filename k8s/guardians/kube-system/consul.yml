---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels: &labels
    app.kubernetes.io/instance: consul
    app.kubernetes.io/name: consul
  name: consul
  namespace: kube-system
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      <<: *labels

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: consul
  namespace: kube-system
  labels:
    app.kubernetes.io/instance: consul
    app.kubernetes.io/name: consul
data:

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  labels: &labels
    app.kubernetes.io/instance: consul
    app.kubernetes.io/name: consul
  name: consul
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: http
      port: 8500
    - name: rpc
      port: 8400
    - name: serflan-tcp
      port: 8301
      protocol: TCP
    - name: serflan-udp
      port: 8301
      protocol: UDP
    - name: serfwan-tcp
      port: 8302
      protocol: TCP
    - name: serfwan-udp
      port: 8302
      protocol: UDP
    - name: server
      port: 8300
    - name: consuldns-tcp
      port: 8600
    - name: consuldns-udp
      port: 8600
      protocol: UDP
  selector:
    <<: *labels
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels: &labels
    app.kubernetes.io/instance: consul
    app.kubernetes.io/name: consul
  name: consul
  namespace: kube-system
  annotations:
    fluxcd.io/tag.consul: semver:~1
    fluxcd.io/automated: "true"
spec:
  replicas: 3
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      <<: *labels
  serviceName: consul
  template:
    metadata:
      labels:
        <<: *labels
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    <<: *labels
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - command:
            - /bin/sh
            - -ec
            - |
              IP=$(hostname -i)
              if [ -e /etc/consul/secrets/gossip-key ]; then
                echo "{\"encrypt\": \"$(base64 /etc/consul/secrets/gossip-key)\"}" > /etc/consul/encrypt.json
                GOSSIP_KEY="-config-file /etc/consul/encrypt.json"
              fi
              for i in $(seq 0 $((${INITIAL_CLUSTER_SIZE} - 1))); do
                  while true; do
                      echo "Waiting for ${STATEFULSET_NAME}-${i}.${STATEFULSET_NAME} to come up"
                      ping -W 1 -c 1 ${STATEFULSET_NAME}-${i}.${STATEFULSET_NAME}.${STATEFULSET_NAMESPACE}.svc > /dev/null && break
                      sleep 1s
                  done
              done
              PEERS=""
              for i in $(seq 0 $((${INITIAL_CLUSTER_SIZE} - 1))); do
                NEXT_PEER="$(ping -c 1 ${STATEFULSET_NAME}-${i}.${STATEFULSET_NAME}.${STATEFULSET_NAMESPACE}.svc | awk -F'[()]' '/PING/{print $2}')"
                if [ "${NEXT_PEER}" != "${POD_IP}" ]; then
                  PEERS="${PEERS}${PEERS:+ } -retry-join ${STATEFULSET_NAME}-${i}.${STATEFULSET_NAME}.${STATEFULSET_NAMESPACE}.svc"
                fi
              done
              exec /bin/consul agent \
                -config-dir=/etc/consul/config \
                -domain=consul \
                -data-dir=/var/lib/consul \
                -server \
                -bootstrap-expect=${INITIAL_CLUSTER_SIZE} \
                -disable-keyring-file \
                -bind=0.0.0.0 \
                -advertise=${IP} \
                ${PEERS} \
                ${GOSSIP_KEY} \
                -client=0.0.0.0 \
                -dns-port=${DNSPORT} \
                -http-port=8500
          env:
            - name: INITIAL_CLUSTER_SIZE
              value: "3"
            - name: STATEFULSET_NAME
              value: consul
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: STATEFULSET_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: DNSPORT
              value: "8600"
          image: consul:1.6.1
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - consul
                - members
                - -http-addr=http://127.0.0.1:8500
            initialDelaySeconds: 300
            timeoutSeconds: 5
          name: consul
          ports:
            - containerPort: 8500
              name: http
            - containerPort: 8400
              name: rpc
            - containerPort: 8301
              name: serflan-tcp
              protocol: TCP
            - containerPort: 8301
              name: serflan-udp
              protocol: UDP
            - containerPort: 8302
              name: serfwan-tcp
              protocol: TCP
            - containerPort: 8302
              name: serfwan-udp
              protocol: UDP
            - containerPort: 8300
              name: server
            - containerPort: 8600
              name: consuldns-tcp
            - containerPort: 8600
              name: consuldns-udp
              protocol: UDP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/consul
              name: datadir
            - mountPath: /etc/consul/config
              name: config
              readOnly: true
            - mountPath: /etc/consul/secrets
              name: secrets
              readOnly: true
      securityContext:
        fsGroup: 1000
      volumes:
        - name: ca
          hostPath:
            path: /etc/ssl/certs/hannahs.family.ca.cert.pem
            type: File
        - name: config
          configMap:
            name: consul
        - name: secrets
          secret:
            secretName: consul
  volumeClaimTemplates:
    - metadata:
        name: datadir
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
