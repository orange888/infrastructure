---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik
  namespace: kube-system
  labels:
    app.kubernetes.io/instance: traefik
    app.kubernetes.io/name: traefik
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik
  labels:
    app.kubernetes.io/instance: traefik
    app.kubernetes.io/name: traefik
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses/status
    verbs:
      - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik
  labels:
    app.kubernetes.io/instance: traefik
    app.kubernetes.io/name: traefik
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik
subjects:
  - kind: ServiceAccount
    name: traefik
    namespace: kube-system
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/instance: traefik
    app.kubernetes.io/name: traefik
  name: traefik
  namespace: kube-system
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: traefik
      app.kubernetes.io/name: traefik
---
apiVersion: v1
data:
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: traefik
    app.kubernetes.io/name: traefik
  name: traefik-dnsprovider-config
  namespace: kube-system
type: Opaque
---
apiVersion: v1
data:
  traefik.toml: |
    # traefik.toml
    logLevel = "info"
    InsecureSkipVerify = true
    defaultEntryPoints = ["http","https"]
    [entryPoints]
      [entryPoints.http]
      address = ":80"
      compress = true
        [entryPoints.http.redirect]
        regex = "^http://(.*)"
        replacement = "https://$1"
        permanent = true
      [entryPoints.https]
      address = ":443"
      compress = true
        [entryPoints.https.tls]
          [[entryPoints.https.tls.certificates]]
          CertFile = "/ssl/tls.crt"
          KeyFile = "/ssl/tls.key"
      [entryPoints.traefik]
      address = ":8080"
    [ping]
    entryPoint = "http"
    [kubernetes]
      [kubernetes.ingressEndpoint]
      publishedService = "kube-system/traefik"
    [traefikLog]
    format = "json"
    [consul]
    endpoint = "consul.kube-system.svc:8500"
    watch = true
    prefix = "traefik"
    [acme]
    KeyType = "RSA4096"
    email = "admin@hannahs.family"
    storage = "traefik/acme/account"
    entryPoint = "https"
    onHostRule = true
    acmeLogging = true
      [acme.dnsChallenge]
      provider = "cloudflare"
    [api]
    entryPoint = "traefik"
    dashboard = true
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: traefik
    app.kubernetes.io/name: traefik
  name: traefik
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    app.kubernetes.io/instance: traefik
    app.kubernetes.io/name: traefik
  name: traefik-dashboard
  namespace: kube-system
spec:
  ports:
    - name: dashboard-http
      port: 80
      targetPort: 8080
  selector:
    app.kubernetes.io/instance: traefik
    app.kubernetes.io/name: traefik
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    app.kubernetes.io/instance: traefik
    app.kubernetes.io/name: traefik
  name: traefik
  namespace: kube-system
spec:
  externalTrafficPolicy: Cluster
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: https
      port: 443
      targetPort: https
  selector:
    app.kubernetes.io/instance: traefik
    app.kubernetes.io/name: traefik
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: traefik
    app.kubernetes.io/name: traefik
  name: traefik
  namespace: kube-system
  annotations:
    flux.weave.works/tag.traefik: semver:~1
    flux.weave.works/automated: "true"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: traefik
      app.kubernetes.io/name: traefik
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: traefik
        app.kubernetes.io/name: traefik
    spec:
      serviceAccountName: traefik
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/instance
                      operator: In
                      values:
                        - traefik
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - traefik
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - args:
            - --configfile=/config/traefik.toml
          env:
            - name: CF_API_KEY
              valueFrom:
                secretKeyRef:
                  name: cloudflare
                  key: CF_API_KEY
            - name: CF_API_EMAIL
              valueFrom:
                secretKeyRef:
                  name: cloudflare
                  key: CF_API_EMAIL
          image: traefik:v1.7.14
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
            - containerPort: 8880
              name: httpn
              protocol: TCP
            - containerPort: 443
              name: https
              protocol: TCP
            - containerPort: 8080
              name: dash
              protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /ssl
              name: ssl
      terminationGracePeriodSeconds: 60
      volumes:
        - configMap:
            name: traefik
          name: config
        - name: ssl
          secret:
            secretName: traefik-default-cert
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/instance: traefik
    app.kubernetes.io/name: traefik
  name: storeconfig-job-1
  namespace: kube-system
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: traefik
        app.kubernetes.io/name: traefik
      name: storeconfig-job-1
    spec:
      containers:
        - args:
            - storeconfig
            - --configfile=/config/traefik.toml
          image: traefik:1.7.12
          name: storeconfig-job
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /acme
              name: acme
      restartPolicy: Never
      volumes:
        - configMap:
            name: traefik
          name: config
        - emptyDir: {}
          name: acme
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
  labels:
    app.kubernetes.io/instance: traefik
    app.kubernetes.io/name: traefik
  name: traefik-dashboard
  namespace: kube-system
spec:
  rules:
    - host: traefik.hannahs.family
      http:
        paths:
          - backend:
              serviceName: traefik-dashboard
              servicePort: dashboard-http
